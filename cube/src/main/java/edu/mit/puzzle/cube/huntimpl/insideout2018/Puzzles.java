package edu.mit.puzzle.cube.huntimpl.insideout2018;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import edu.mit.puzzle.cube.core.model.Puzzle;
import edu.mit.puzzle.cube.huntimpl.insideout2018.HuntDefinition.Emotion;
import edu.mit.puzzle.cube.huntimpl.insideout2018.HuntDefinition.Road;
import edu.mit.puzzle.cube.huntimpl.insideout2018.HuntDefinition.SolveRewardProperty;

import java.util.function.Consumer;
import java.time.ZonedDateTime;
import java.time.LocalDateTime;
import java.time.ZoneId;

public class Puzzles {
    static final ImmutableList<Puzzle> PUZZLES;

    static {
        ImmutableList.Builder<Puzzle> puzzlesBuilder = ImmutableList.builder();
        Consumer<PuzzleBuilder> add = puzzleBuilder -> {
            puzzlesBuilder.add(puzzleBuilder.build());
        };

        // Each of these unlocks the interaction to request that a specific island be unlocked
        add.accept(PuzzleBuilder.builder()
                .setId("island-open-1")
                .setDisplayId("discover_island_1")
                .setDisplayName("Discover First Island of Personality")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.brainpowerConstraint(850)));
        add.accept(PuzzleBuilder.builder()
                .setId("island-open-2")
                .setDisplayId("discover_island_2")
                .setDisplayName("Discover Second Island of Personality")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.brainpowerConstraint(1000)));
        add.accept(PuzzleBuilder.builder()
                .setId("island-open-3")
                .setDisplayId("discover_island_3")
                .setDisplayName("Discover Third Island of Personality")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.brainpowerConstraint(2000)));
        add.accept(PuzzleBuilder.builder()
                .setId("island-open-4")
                .setDisplayId("discover_island_4")
                .setDisplayName("Discover Fourth Island of Personality")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.brainpowerConstraint(3250)));

        int REMAINING_PUZZLES_TO_OPEN_ISLAND = 3;

        /**
         * Memory round
         */
        SolveRewardProperty emotionMetaReward = SolveRewardProperty.builder()
            .addScore(HuntDefinition.Score.MEMORY_SOLVES, 1)
            .addScore(HuntDefinition.Score.EMOTION_META_SOLVES, 1)
            .build();

        add.accept(PuzzleBuilder.builder()
                .setId("joy")
                .setDisplayId("joy")
                .setDisplayName("Joy")
                .setRot13Answer("ORNZ HC")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(emotionMetaReward));
        add.accept(PuzzleBuilder.builder()
                .setId("sadness")
                .setDisplayId("sadness")
                .setDisplayName("Sadness")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("joy", "UNLOCKED"))
                .setRot13Answer("GRNE QHPG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(emotionMetaReward));
        add.accept(PuzzleBuilder.builder()
                .setId("fear")
                .setDisplayId("fear")
                .setDisplayName("Fear")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("sadness", "UNLOCKED"))
                .setRot13Answer("OBYQYL TB")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(emotionMetaReward));
        add.accept(PuzzleBuilder.builder()
                .setId("disgust")
                .setDisplayId("disgust")
                .setDisplayName("Disgust")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("fear", "UNLOCKED"))
                .setRot13Answer("ENCCRY")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(emotionMetaReward));
        add.accept(PuzzleBuilder.builder()
                .setId("anger")
                .setDisplayId("anger")
                .setDisplayName("Anger")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("disgust", "UNLOCKED"))
                .setRot13Answer("CVPX N SVTUG JVGU YBPX")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(emotionMetaReward));
                
        /* Emotional Encounters don't have answers - cast member radios it in */
        
        SolveRewardProperty encounterReward = SolveRewardProperty.builder()
            .addScore(HuntDefinition.Score.EMOTION_ENCOUNTER_COMPLETIONS, 1)
            .build();
        add.accept(PuzzleBuilder.builder()
                .setId("encounter-joy")
                .setDisplayId("joy_encounter")
                .setDisplayName("Joy Encounter")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("joy", "SOLVED"))
                .setSolveReward(encounterReward));
        add.accept(PuzzleBuilder.builder()
                .setId("encounter-sadness")
                .setDisplayId("sadness_encounter")
                .setDisplayName("Sadness Encounter")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("sadness", "SOLVED"))
                .setSolveReward(encounterReward));
        add.accept(PuzzleBuilder.builder()
                .setId("encounter-fear")
                .setDisplayId("fear_encounter")
                .setDisplayName("Fear Encounter")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("fear", "SOLVED"))
                .setSolveReward(encounterReward));
        add.accept(PuzzleBuilder.builder()
                .setId("encounter-disgust")
                .setDisplayId("disgust_encounter")
                .setDisplayName("Disgust Encounter")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("disgust", "SOLVED"))
                .setSolveReward(encounterReward));
        add.accept(PuzzleBuilder.builder()
                .setId("encounter-anger")
                .setDisplayId("anger_encounter")
                .setDisplayName("Anger Encounter")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("anger", "SOLVED"))
                .setSolveReward(encounterReward));
        /* Buzzy's encounter is made visible once all emotion metas are solved (so Dispatch can prepare),
           but is not unlocked until all other encounters are complete, so it shows up in the right order */
        /* Open to suggestions on this... */
        add.accept(PuzzleBuilder.builder()
                .setId("encounter-buzzy")
                .setDisplayId("buzzy_encounter")
                .setDisplayName("Buzzy Encounter")
                .setInteraction()
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.EMOTION_META_SOLVES,5))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.EMOTION_ENCOUNTER_COMPLETIONS,5)));

        /* Endgames */

        add.accept(PuzzleBuilder.builder()
                .setId("brainstorm")
                .setDisplayId("the_brainstorm")
                .setDisplayName("The Brainstorm")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("encounter-buzzy", "SOLVED"))
                .setRot13Answer("GNFGRSHY URNEGSRYG CNFFVBANGR PNHGVBHF QRYVTUGSHY"));

        add.accept(PuzzleBuilder.builder()
                .setId("emotional-finale")
                .setDisplayId("emotional_finale")
                .setDisplayName("Emotional Finale")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("brainstorm", "SOLVED"))
                .setSolveReward(SolveRewardProperty.builder().addScore(HuntDefinition.Score.GRAND_FINALE_PROGRESS, 1).build()));

        add.accept(PuzzleBuilder.builder()
                .setId("grand-finale")
                .setDisplayId("grand_finale")
                .setDisplayName("Grand Finale")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.GRAND_FINALE_PROGRESS,5)));
            
        /* Events */

        int EVENT_BUZZY_BUCKS_REWARD = 20000;
        SolveRewardProperty eventReward = SolveRewardProperty.buzzyBucksReward(EVENT_BUZZY_BUCKS_REWARD);
        
        add.accept(PuzzleBuilder.builder()
                .setId("event-1")
                .setDisplayId("care_and_feeding_of_your_mystery_hunt_team")
                .setDisplayName("Care and Feeding of Your Mystery Hunt Team")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.timeConstraint(LocalDateTime.of(2018, 1, 12, 19, 0, 0)))
                .setAnswer("CLEAN UP")
                .setSolveReward(eventReward));
        add.accept(PuzzleBuilder.builder()
                .setId("event-2")
                .setDisplayId("effective_resource_management_in_high_stress_situations")
                .setDisplayName("Effective Resource Management in High Stress Situations")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.timeConstraint(LocalDateTime.of(2018, 1, 12, 22, 0, 0)))
                .setAnswer("NICK OF TIME")
                .setSolveReward(eventReward));
        add.accept(PuzzleBuilder.builder()
                .setId("event-3")
                .setDisplayId("covering_your_ass_with_caution_tape")
                .setDisplayName("Covering Your Ass With Caution Tape")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.timeConstraint(LocalDateTime.of(2018, 1, 13, 9, 0, 0)))
                .setAnswer("MEASURE ONCE CUT TWICE")
                .setSolveReward(eventReward));
        add.accept(PuzzleBuilder.builder()
                .setId("event-4")
                .setDisplayId("stretching_and_calisthenics")
                .setDisplayName("Stretching and Calisthenics")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.timeConstraint(LocalDateTime.of(2018, 1, 13, 14, 0, 0)))
                .setAnswer("ROOT BEER FLOAT")
                .setSolveReward(eventReward));
        add.accept(PuzzleBuilder.builder()
                .setId("event-5")
                .setDisplayId("communication_and_cooperation_for_proper_teamwork")
                .setDisplayName("Communication and Cooperation for Proper Teamwork")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.timeConstraint(LocalDateTime.of(2018, 1, 13, 19, 0, 0)))
                .setAnswer("KEEP IT TOGETHER")
                .setSolveReward(eventReward));

        SolveRewardProperty recoveryReward = SolveRewardProperty.builder()
            .addScore(HuntDefinition.Score.GRAND_FINALE_PROGRESS, 1)
            .build();

        SolveRewardProperty memorySolveReward = SolveRewardProperty.scoreReward(HuntDefinition.Score.MEMORY_SOLVES, 1);

        // Initial puzzle release
        add.accept(PuzzleBuilder.builder()
                .setId("emo-1")
                .setDisplayId("yeah_but_it_didnt_work")
                .setDisplayName("Yeah, but It Didn\u2019t Work!")
                .setEmotion(Emotion.ANGER)
                .setAnger(2)
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("anger", "UNLOCKED"))
                .setRot13Answer("NQ ANHFRNZ")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-2")
                .setDisplayId("warm_and_fuzzy")
                .setDisplayName("Warm and Fuzzy")
                .setEmotion(Emotion.JOY)
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("emo-1", "UNLOCKED"))
                .setRot13Answer("VAFVTUG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-3")
                .setDisplayId("clueless")
                .setDisplayName("Clueless")
                .setEmotion(Emotion.DISGUST)
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("emo-2", "UNLOCKED"))
                .setRot13Answer("XREARY")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-4")
                .setDisplayId("in_memoriam")
                .setDisplayName("In Memoriam")
                .setEmotion(Emotion.SADNESS)
                .setSadness(2)
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("emo-3", "UNLOCKED"))
                .setRot13Answer("VFYNAQ BS BCCBEGHAVGL")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-5")
                .setDisplayId("freak_out")
                .setDisplayName("Freak Out")
                .setEmotion(Emotion.FEAR)
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("emo-4", "UNLOCKED"))
                .setRot13Answer("FBHAQF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));

        add.accept(PuzzleBuilder.builder()
                .setId("emo-6")
                .setDisplayId("lets_get_ready_to_jumble")
                .setDisplayName("Let\u2019s Get Ready to Jumble")
                .setEmotion(Emotion.ANGER)
                .setAnger(11)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(1))
                .setRot13Answer("REVP NATYR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-7")
                .setDisplayId("aka")
                .setDisplayName("AKA")
                .setEmotion(Emotion.DISGUST)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(2))
                .setRot13Answer("FGRC QNQQL")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-8")
                .setDisplayId("unfortunate_al")
                .setDisplayName("Unfortunate Al")
                .setEmotion(Emotion.SADNESS)
                .setSadness(4)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(3))
                .setRot13Answer("VAPERQVOYL FGHCVQ")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-9")
                .setDisplayId("a_learning_path")
                .setDisplayName("A Learning Path")
                .setEmotions(ImmutableSet.of(Emotion.DISGUST, Emotion.FEAR))
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(4))
                .setRot13Answer("RKPRCG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-10")
                .setDisplayId("cross_words")
                .setDisplayName("Cross Words")
                .setEmotion(Emotion.ANGER)
                .setAnger(1)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(5))
                .setRot13Answer("NETHR BIRE")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-11")
                .setDisplayId("we_are_all_afraid_to_die")
                .setDisplayName("We Are All Afraid to Die")
                .setEmotion(Emotion.FEAR)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(5))
                .setRot13Answer("ZRQVPNY RZRETRAPL")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-12")
                .setDisplayId("temperance")
                .setDisplayName("Temperance")
                .setEmotions(ImmutableSet.of(Emotion.DISGUST, Emotion.ANGER))
                .setAnger(10)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(6))
                .setRot13Answer("OBAR TENSG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-13")
                .setDisplayId("word_search")
                .setDisplayName("Word Search")
                .setEmotions(ImmutableSet.of(Emotion.SADNESS, Emotion.FEAR))
                .setSadness(4)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(7))
                .setRot13Answer("ARPRFFNEL")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-14")
                .setDisplayId("just_keep_swiping")
                .setDisplayName("Just Keep Swiping")
                .setEmotion(Emotion.DISGUST)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(8))
                .setRot13Answer("EBHTU QNGR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-15")
                .setDisplayId("caged")
                .setDisplayName("Caged")
                .setEmotions(ImmutableSet.of(Emotion.SADNESS, Emotion.JOY))
                .setSadness(5)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(9))
                .setRot13Answer("UBEFRF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-16")
                .setDisplayId("minority_report")
                .setDisplayName("Minority Report")
                .setEmotion(Emotion.DISGUST)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(10))
                .setRot13Answer("SVYZ PBHAPVYF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-17")
                .setDisplayId("asteroids")
                .setDisplayName("Asteroids")
                .setEmotion(Emotion.ANGER)
                .setAnger(3)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(10))
                .setRot13Answer("YNFRE ORNZ")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-18")
                .setDisplayId("good_fences_make_sad_and_disgusted_neighbors")
                .setDisplayName("Good Fences Make Sad and Disgusted Neighbors")
                .setEmotions(ImmutableSet.of(Emotion.DISGUST, Emotion.SADNESS))
                .setSadness(2)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(11))
                .setRot13Answer("UBJ TERNG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-19")
                .setDisplayId("face_your_fears")
                .setDisplayName("Face Your Fears")
                .setEmotion(Emotion.FEAR)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(12))
                .setRot13Answer("ERTNEQYRFF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-20")
                .setDisplayId("scattered_and_absurd")
                .setDisplayName("Scattered and Absurd")
                .setEmotions(ImmutableSet.of(Emotion.ANGER, Emotion.SADNESS))
                .setSadness(3)
                .setAnger(8)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(13))
                .setRot13Answer("FHCREVBEF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-21")
                .setDisplayId("cooking_a_recipe")
                .setDisplayName("Cooking a Recipe")
                .setEmotions(ImmutableSet.of(Emotion.JOY, Emotion.DISGUST))
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(14))
                .setRot13Answer("ERNY SBBQ")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-22")
                .setDisplayId("roadside_america")
                .setDisplayName("Roadside America")
                .setEmotions(ImmutableSet.of(Emotion.ANGER, Emotion.FEAR))
                .setAnger(6)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(15))
                .setRot13Answer("RKPHEFVBA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-23")
                .setDisplayId("crossed_paths")
                .setDisplayName("Crossed Paths")
                .setEmotion(Emotion.JOY)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(16))
                .setRot13Answer("EVGHNY")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-24")
                .setDisplayId("on_the_a_line")
                .setDisplayName("On the A Line")
                .setEmotion(Emotion.DISGUST)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(17))
                .setRot13Answer("FGLYR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-25")
                .setDisplayId("whats_in_a_name")
                .setDisplayName("What\u2019s In a Name?")
                .setEmotion(Emotion.ANGER)
                .setAnger(9)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(18))
                .setRot13Answer("RYVMNORGU")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-26")
                .setDisplayId("games_club")
                .setDisplayName("Games Club")
                .setEmotion(Emotion.SADNESS)
                .setSadness(5)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(19))
                .setRot13Answer("CNEGVPVCNGR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-27")
                .setDisplayId("birds_of_a_feather")
                .setDisplayName("Birds of a Feather")
                .setEmotions(ImmutableSet.of(Emotion.ANGER, Emotion.JOY))
                .setAnger(12)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(20))
                .setRot13Answer("NFPRAFVBA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-28")
                .setDisplayId("nobody_likes_sad_songs")
                .setDisplayName("Nobody Likes Sad Songs")
                .setEmotion(Emotion.SADNESS)
                .setSadness(2)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(21))
                .setRot13Answer("IVFVBA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-29")
                .setDisplayId("irritating_places")
                .setDisplayName("Irritating Places")
                .setEmotion(Emotion.ANGER)
                .setAnger(4)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(22))
                .setRot13Answer("NFGENXUNA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-30")
                .setDisplayId("what_the")
                .setDisplayName("What The...")
                .setEmotions(ImmutableSet.of(Emotion.FEAR, Emotion.JOY))
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(23))
                .setRot13Answer("FGENGRTL")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-31")
                .setDisplayId("beast_workshop")
                .setDisplayName("Beast Workshop")
                .setEmotion(Emotion.DISGUST)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(24))
                .setRot13Answer("AVTUGYL")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-32")
                .setDisplayId("that_time_i_somehow_felt_incomplete")
                .setDisplayName("That Time I Somehow Felt Incomplete")
                .setEmotion(Emotion.ANGER)
                .setAnger(7)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(25))
                .setRot13Answer("RKNZ TENQR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-33")
                .setDisplayId("jeopardy")
                .setDisplayName("Jeopardy!")
                .setEmotion(Emotion.FEAR)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(26))
                .setRot13Answer("IBYHAGRRE")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));
        add.accept(PuzzleBuilder.builder()
                .setId("emo-34")
                .setDisplayId("chemistry_experimentation")
                .setDisplayName("Chemistry Experimentation")
                .setEmotion(Emotion.ANGER)
                .setAnger(5)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.automaticallySatisfied())
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.memorySolveConstraint(27))
                .setRot13Answer("NZORE ORRE")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.MEMORIES)
                .setSolveReward(memorySolveReward));

        /**
         * Hacking island
         */
        // "hacking" represents the unlock of the island overall
        // Note that answers and symbols can be moved around freely
        add.accept(PuzzleBuilder.builder()
                .setId("hacking")
                .setDisplayName("Hacking Island"));

        SolveRewardProperty hackingScoutPuzzleReward = SolveRewardProperty
            .scoreReward(HuntDefinition.Score.HACKING_SCOUT_SOLVES, 1);
        SolveRewardProperty hackingBuildPuzzleReward = SolveRewardProperty
            .scoreReward(HuntDefinition.Score.HACKING_BUILD_SOLVES, 1);
        SolveRewardProperty hackingDeployPuzzleReward = SolveRewardProperty
            .scoreReward(HuntDefinition.Score.HACKING_DEPLOY_SOLVES, 1);
        SolveRewardProperty hackingSubmetaReward = SolveRewardProperty
            .scoreReward(HuntDefinition.Score.HACKING_SUBMETA_SOLVES, 1);
        
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-recovery")
                .setDisplayId("hacking_recovery")
                .setDisplayName("Recover the Hacking Core Memory")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-supermeta", "SOLVED"))
                .setSolveReward(recoveryReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-supermeta")
                .setDisplayId("flee")
                .setDisplayName("Flee")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_SUBMETA_SOLVES,3))
                .setRot13Answer("BA N PNYGRPU PNAABAONYY EHA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING));

        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-meta")
                .setDisplayId("scout")
                .setDisplayName("Scout")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking", "UNLOCKED"))
                .setRot13Answer("RKBFXRYRGBA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingSubmetaReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-1")
                .setDisplayId("no_context")
                .setDisplayName("No Context")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-scout-meta", "UNLOCKED"))
                .setRot13Answer("PURPXCBVAG")
                .setSymbol("combination")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingScoutPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-2")
                .setDisplayId("the_lurking_horror_ii_the_lurkening")
                .setDisplayName("The Lurking Horror II: The Lurkening")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-scout-1", "UNLOCKED"))
                .setRot13Answer("NQIRAGHER")
                .setSymbol("motion")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingScoutPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-3")
                .setDisplayId("bark_ode")
                .setDisplayName("Bark Ode")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-scout-2", "UNLOCKED"))
                .setRot13Answer("GRAQVABCNGUVRF")
                .setSymbol("camera")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingScoutPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-4")
                .setDisplayId("voter_fraud")
                .setDisplayName("Voter Fraud")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_SCOUT_SOLVES,1))
                .setRot13Answer("FXLFPENCRE")
                .setSymbol("thumbprint")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingScoutPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-5")
                .setDisplayId("the_10000_puzzle_tesseract")
                .setDisplayName("The 10,000 Puzzle Tesseract")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_SCOUT_SOLVES,2))
                .setRot13Answer("CREFBAARY")
                .setSymbol("microphone")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingScoutPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-6")
                .setDisplayId("worldwide_contacts")
                .setDisplayName("Worldwide Contacts")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_SCOUT_SOLVES,3))
                .setRot13Answer("VAGREANGVBANY")
                .setSymbol("rfid")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingScoutPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-7")
                .setDisplayId("texts_from_mom")
                .setDisplayName("Texts From Mom")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_SCOUT_SOLVES,4))
                .setRot13Answer("RKGRAQ")
                .setSymbol("keycode")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingScoutPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-8")
                .setDisplayId("murder_at_the_asylum")
                .setDisplayName("Murder at the Asylum")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_SCOUT_SOLVES,5))
                .setRot13Answer("NYGREANGR")
                .setSymbol("lasers")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingScoutPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-scout-runaround")
                .setDisplayId("scouting_challenge")
                .setDisplayName("Scouting Challenge")
                .setRot13Answer("GEHFG AB BAR")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-scout-meta", "SOLVED")));

        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-meta")
                .setDisplayId("build")
                .setDisplayName("Build")
                .setInteraction() // this is a kludge but it's Thursday
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-scout-meta", "SOLVED"))
                .setRot13Answer("OVBSHRY GBEPU")
                .setSolveReward(hackingSubmetaReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-1")
                .setDisplayId("is_there_a_draft_in_here")
                .setDisplayName("Is There a Draft in Here?")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-build-meta", "UNLOCKED"))
                .setRot13Answer("QEHAX RABHTU")
                .setSymbol("wrench")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingBuildPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-2")
                .setDisplayId("marked_deck")
                .setDisplayName("Marked Deck")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-build-1", "UNLOCKED"))
                .setRot13Answer("EBYYVA UNAQ")
                .setSymbol("drill")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingBuildPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-3")
                .setDisplayId("model_kit")
                .setDisplayName("Model Kit")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-build-2", "UNLOCKED"))
                .setRot13Answer("PURZVFGEL FNIIL")
                .setSymbol("iron")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingBuildPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-4")
                .setDisplayId("arts_and_crafts")
                .setDisplayName("Arts and Crafts")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_BUILD_SOLVES,1))
                .setRot13Answer("PBASVARQ NDHVSRE")
                .setSymbol("saw")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingBuildPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-5")
                .setDisplayId("blocked_lines")
                .setDisplayName("Blocked Lines")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_BUILD_SOLVES,2))
                .setRot13Answer("GUERR CBHAQRE")
                .setSymbol("pliers")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingBuildPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-6")
                .setDisplayId("fowlty_towers")
                .setDisplayName("Fowlty Towers")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_BUILD_SOLVES,3))
                .setRot13Answer("OENMRAYL RIVY")
                .setSymbol("screwdriver")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingBuildPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-7")
                .setDisplayId("dont_look")
                .setDisplayName("Don\u2019t Look")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_BUILD_SOLVES,4))
                .setRot13Answer("SNAPL PNZOEVP")
                .setSymbol("micrometer")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingBuildPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-8")
                .setDisplayId("wolf_in_the_fold")
                .setDisplayName("Wolf in the Fold")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_BUILD_SOLVES,5))
                .setRot13Answer("SVGMFVZZBAF THVYOREG")
                .setSymbol("hammer")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingBuildPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-build-runaround")
                .setDisplayId("building_challenge")
                .setDisplayName("Building Challenge")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-build-meta", "SOLVED"))
                .setRot13Answer("ERQHPR NAQ ERPLPYR"));

        add.accept(PuzzleBuilder.builder()
                .setId("hacking-deploy-meta")
                .setDisplayId("deploy")
                .setDisplayName("Deploy")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-build-meta", "SOLVED"))
                .setRot13Answer("ONPXHC CYNA")
                .setSolveReward(hackingSubmetaReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-deploy-1")
                .setDisplayId("a_pub_crawl")
                .setDisplayName("A Pub Crawl")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-deploy-meta", "UNLOCKED"))
                .setRot13Answer("FBYREN")
                .setSymbol("car")
                .setRadio("35-310")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingDeployPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-deploy-2")
                .setDisplayId("executive_relationship_commandments")
                .setDisplayName("Executive Relationship Commandments")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-deploy-1", "UNLOCKED"))
                .setRot13Answer("CRACNY")
                .setSymbol("lem")
                .setRadio("37-212")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingDeployPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-deploy-3")
                .setDisplayId("zelma_frank")
                .setDisplayName("Zelma & Frank")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-deploy-2", "UNLOCKED"))
                .setRot13Answer("UVXRHC")
                .setSymbol("tardis")
                .setRadio("37-322")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingDeployPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-deploy-4")
                .setDisplayId("ode_to_the_greeks")
                .setDisplayName("Ode to the Greeks")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_DEPLOY_SOLVES,1))
                .setRot13Answer("AROHYN")
                .setSymbol("firetruck")
                .setRadio("14N-325")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingDeployPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-deploy-5")
                .setDisplayId("studies_in_two_factor_authentication")
                .setDisplayName("Studies in Two-Factor Authentication")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_DEPLOY_SOLVES,2))
                .setRot13Answer("OBGARG")
                .setSymbol("flyer")
                .setRadio("35-308")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingDeployPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-deploy-6")
                .setDisplayId("l_is_for_library")
                .setDisplayName("L is for Library")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.HACKING_DEPLOY_SOLVES,3))
                .setRot13Answer("BPRYBG")
                .setSymbol("cow")
                .setRadio("14E-310 (combo: 2657#)")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.HACKING)
                .setSolveReward(hackingDeployPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("hacking-deploy-runaround")
                .setDisplayId("deployment_challenge")
                .setDisplayName("Deployment Challenge")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("hacking-deploy-meta", "SOLVED"))
                .setRot13Answer("WHFG VA PNFR"));
                        
        /**
         * Sci-Fi island
         */
        // "sci-fi" represents the unlock of the island overall
        add.accept(PuzzleBuilder.builder()
                .setId("scifi")
                .setDisplayName("Sci-Fi Island"));

        add.accept(PuzzleBuilder.builder()
                .setId("scifi-recovery")
                .setDisplayId("scifi_recovery")
                .setDisplayName("Recover the Sci-Fi Core Memory")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi-supermeta", "SOLVED"))
                .setSolveReward(recoveryReward));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-supermeta")
                .setDisplayId("starship_enterprise")
                .setDisplayName("Starship Enterprise")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setRot13Answer("VA SYHK")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-meta-1")
                .setDisplayId("naquadah_generator")
                .setDisplayName("Naquadah Generator")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-2", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-18", "SOLVED")
                        .build())
                .setRot13Answer("VAGRESNPR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-meta-2")
                .setDisplayId("laratel_wf_15_fusion_reactor")
                .setDisplayName("Laratel WF-15 Fusion Reactor")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi-supermeta", "UNLOCKED"))
                .setRot13Answer("RZNANGVBAF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-meta-3")
                .setDisplayId("blue_sun_6v4_178_b31_trace_compression_block")
                .setDisplayName("Blue Sun 6V4-178-B31 Trace Compression Block")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-11", "SOLVED")
                        .build())
                .setRot13Answer("ERNY YVSR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-meta-4")
                .setDisplayId("novaldex_04_z_cryogenic_power_generator")
                .setDisplayName("Novaldex 04-Z Cryogenic Power Generator")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-7", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-16", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-17", "SOLVED")
                        .build())
                .setRot13Answer("ZREVQVNA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-meta-5")
                .setDisplayId("voltaik_bio_electric_cell")
                .setDisplayName("Voltaik Bio-Electric Cell")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-2", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-12", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-14", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-15", "SOLVED")
                        .build())
                .setRot13Answer("RIBYHGVBA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-meta-6")
                .setDisplayId("allspark")
                .setDisplayName("AllSpark")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-1", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-16", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-17", "SOLVED")
                        .build())
                .setRot13Answer("CEVZR SNPGBEF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-1")
                .setDisplayId("fuch_sia")
                .setDisplayName("Fuch-sia")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi-meta-2", "UNLOCKED"))
                .setRot13Answer("ZVFSVG ZNGURZNGVPVNAF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-2")
                .setDisplayId("feedback_encounters_of_the_cld_kind")
                .setDisplayName("Feedback Encounters of the CLD Kind")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-1", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-12", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-15", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-18", "SOLVED")
                        .build())
                .setRot13Answer("SRQRENY ERFBHEPRF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-3")
                .setDisplayId("feeling_cross")
                .setDisplayName("Feeling Cross")
                .setScifiDoorBoxes(2)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-16", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-17", "SOLVED")
                        .build())
                .setRot13Answer("NHFGRER GLCRSNPR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-4")
                .setDisplayId("family_dinner")
                .setDisplayName("Family Dinner")
                .setScifiDoorBoxes(1)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-1", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-11", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-17", "SOLVED")
                        .build())
                .setRot13Answer("VAVGVNY GUERNG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-5")
                .setDisplayId("cash_cab")
                .setDisplayName("Cash Cab")
                .setScifiDoorColor("yellow")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-1", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-11", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-18", "SOLVED")
                        .build())
                .setRot13Answer("GNK QBPHZRAGF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-6")
                .setDisplayId("space_sounds_tv")
                .setDisplayName("Space Sounds TV")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-7", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-14", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-15", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-16", "SOLVED")
                        .build())
                .setRot13Answer("VAYNVQ RZOYRZ")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-7")
                .setDisplayId("the_next_generation")
                .setDisplayName("The Next Generation")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-10", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-14", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-16", "SOLVED")
                        .build())
                .setRot13Answer("IVEGHNYVMRQ RAIVEBAZRAG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-8")
                .setDisplayId("disorientation")
                .setDisplayName("Disorientation")
                .setScifiDoorBoxes(-3)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-14", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-15", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-16", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-17", "SOLVED")
                        .build())
                .setRot13Answer("CNVEJVFR RKCNAFVBA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-9")
                .setDisplayId("flags_o1_6ur_10the15")
                .setDisplayName("Flags o1 6ur 10the15")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-2", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-12", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-15", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-16", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-17", "SOLVED")
                        .build())
                .setRot13Answer("OYNPX BCRENGVBA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-10")
                .setDisplayId("floor_drawing_305")
                .setDisplayName("Floor Drawing 305")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi-1", "UNLOCKED"))
                .setRot13Answer("PBYBE ZVPEBTENCUL")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-11")
                .setDisplayId("potlines")
                .setDisplayName("Potlines")
                .setScifiDoorColor("red")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi-10", "UNLOCKED"))
                .setRot13Answer("ERPERNGVBANY HFR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-12")
                .setDisplayId("bloodroots")
                .setDisplayName("Bloodroots")
                .setScifiDoorColor("blue")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-2", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-2", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-15", "SOLVED")
                        .build())
                .setRot13Answer("NANGBZVPNY QRZBAFGENGVBAF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-13")
                .setDisplayId("message_in_a_bottle")
                .setDisplayName("Message in a Bottle")
                .setScifiDoorColor("magenta")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-1", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-16", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-17", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-18", "SOLVED")
                        .build())
                .setRot13Answer("VAGENPGNOYR DHRFGVBA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-14")
                .setDisplayId("self_referential_mania")
                .setDisplayName("Self-Referential Mania")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-7", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-10", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-15", "SOLVED")
                        .build())
                .setRot13Answer("RGEHFPNA TBQ")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-15")
                .setDisplayId("the_universs_and_everythinn")
                .setDisplayName("The Universs and Everythinn")
                .setScifiDoorBoxes(-4)
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-2", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-12", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-14", "SOLVED")
                        .build())
                .setRot13Answer("FZNYY ABIRY")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-16")
                .setDisplayId("musical_chairs")
                .setDisplayName("Musical Chairs")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-7", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-17", "SOLVED")
                        .build())
                .setRot13Answer("TREV UNYYVJRYY")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-17")
                .setDisplayId("lest_you_be")
                .setDisplayName("Lest You Be")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-meta-6", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-1", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-3", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-4", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-8", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-9", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-16", "SOLVED")
                        .build())
                .setRot13Answer("YNOBENGBEL GRPUABYBTVFGF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));
        add.accept(PuzzleBuilder.builder()
                .setId("scifi-18")
                .setDisplayId("hashiwokakuro_count_your_bridges")
                .setDisplayName("Hashiwokakuro (Count your bridges)")
                .setScifiDoorColor("green")
                .setVisibleConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("scifi", "UNLOCKED"))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("scifi-meta-1", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-2", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-5", "SOLVED")
                        .addPuzzleStatusConstraint("scifi-13", "SOLVED")
                        .build())
                .setRot13Answer("VZCEBIVFRQ ENSG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.SCIFI));

        /**
         * Games island
         */
        // "games" represents the unlock of the island overall
        add.accept(PuzzleBuilder.builder()
                .setId("games")
                .setDisplayName("Games Island"));

        add.accept(PuzzleBuilder.builder()
                .setId("games-recovery")
                .setDisplayId("games_recovery")
                .setDisplayName("Recover the Games Core Memory")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("games-supermeta", "SOLVED"))
                .setSolveReward(recoveryReward));
        add.accept(PuzzleBuilder.builder()
                .setId("games-supermeta")
                .setDisplayId("the_robber")
                .setDisplayName("The Robber")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("games-antemeta", "SOLVED"))
                .setRot13Answer("VA N SBEOVQQRA QRFREG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-antemeta")
                .setDisplayId("the_desert")
                .setDisplayName("The Desert")
                .setTile("desert")
                .setRoads(ImmutableSet.of(Road.EAST,Road.SOUTHEAST,Road.SOUTHWEST,Road.WEST,Road.NORTHWEST,Road.NORTHEAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-1", "SOLVED")
                        .addPuzzleStatusConstraint("games-2", "SOLVED")
                        .addPuzzleStatusConstraint("games-3", "SOLVED")
                        .addPuzzleStatusConstraint("games-4", "SOLVED")
                        .addPuzzleStatusConstraint("games-5", "SOLVED")
                        .addPuzzleStatusConstraint("games-6", "SOLVED")
                        .build())
                .setRot13Answer("VAGREPBNFGNY RZCVER")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-1")
                .setDisplayId("tournament_organization")
                .setDisplayName("Tournament Organization")
                .setTile("hill")
                .setChit(5)
                .setRoads(ImmutableSet.of(Road.NORTHWEST,Road.WEST,Road.SOUTHWEST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-2", "SOLVED")
                        .addPuzzleStatusConstraint("games-6", "SOLVED")
                        .addPuzzleStatusConstraint("games-antemeta", "SOLVED")
                        .build())
                .setRot13Answer("FCBG GUR ONYY")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-2")
                .setDisplayId("all_the_right_angles")
                .setDisplayName("All the Right Angles")
                .setTile("pasture")
                .setChit(7)
                .setRoads(ImmutableSet.of(Road.NORTHEAST,Road.WEST,Road.NORTHWEST,Road.SOUTHWEST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-1", "SOLVED")
                        .addPuzzleStatusConstraint("games-3", "SOLVED")
                        .addPuzzleStatusConstraint("games-antemeta", "SOLVED")
                        .addPuzzleStatusConstraint("games-10", "SOLVED")
                        .build())
                .setRot13Answer("CBPXRG ZBARL")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-3")
                .setDisplayId("cartography")
                .setDisplayName("Cartography")
                .setTile("mountain")
                .setChit(8)
                .setRoads(ImmutableSet.of(Road.NORTHEAST,Road.EAST,Road.NORTHWEST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-2", "SOLVED")
                        .addPuzzleStatusConstraint("games-4", "SOLVED")
                        .addPuzzleStatusConstraint("games-antemeta", "SOLVED")
                        .build())
                .setRot13Answer("CVAANPYRF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-4")
                .setDisplayId("pestered")
                .setDisplayName("Pestered")
                .setTile("pasture")
                .setChit(3)
                .setRoads(ImmutableSet.of(Road.NORTHEAST,Road.EAST,Road.SOUTHEAST,Road.NORTHWEST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-3", "SOLVED")
                        .addPuzzleStatusConstraint("games-5", "SOLVED")
                        .addPuzzleStatusConstraint("games-antemeta", "SOLVED")
                        .addPuzzleStatusConstraint("games-14", "SOLVED")
                        .build())
                .setRot13Answer("ZNFGRE NG NEZF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-5")
                .setDisplayId("a_tribute_2010_2017")
                .setDisplayName("A Tribute: 2010-2017")
                .setTile("forest")
                .setChit(5)
                .setRoads(ImmutableSet.of(Road.SOUTHWEST,Road.EAST,Road.SOUTHEAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-4", "SOLVED")
                        .addPuzzleStatusConstraint("games-6", "SOLVED")
                        .addPuzzleStatusConstraint("games-antemeta", "SOLVED")
                        .build())
                .setRot13Answer("ZRZBEVNY")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-6")
                .setDisplayId("gratia_plena")
                .setDisplayName("GRATIA PLENA")
                .setTile("mountain")
                .setChit(10)
                .setRoads(ImmutableSet.of(Road.SOUTHWEST,Road.WEST,Road.SOUTHEAST,Road.EAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-5", "SOLVED")
                        .addPuzzleStatusConstraint("games-1", "SOLVED")
                        .addPuzzleStatusConstraint("games-antemeta", "SOLVED")
                        .addPuzzleStatusConstraint("games-18", "SOLVED")
                        .build())
                .setRot13Answer("PBQRK EHAVPHF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-7")
                .setDisplayId("thanks")
                .setDisplayName("Thanks")
                .setTile("mountain")
                .setChit(2)
                .setRoads(ImmutableSet.of(Road.NORTHWEST,Road.SOUTHWEST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-8", "SOLVED")
                        .addPuzzleStatusConstraint("games-18", "SOLVED")
                        .build())
                .setRot13Answer("CNAQBEN")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-8")
                .setDisplayId("walk_across_some_dungeons_2")
                .setDisplayName("Walk Across Some Dungeons 2")
                .setTile("forest")
                .setChit(9)
                .setRoads(ImmutableSet.of(Road.SOUTHWEST,Road.NORTHEAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-9", "SOLVED")
                        .addPuzzleStatusConstraint("games-7", "SOLVED")
                        .build())
                .setRot13Answer("XRLOBNEQ CYNLRE")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-9")
                .setDisplayId("this_years_hardest_crossword")
                .setDisplayName("This Year\u2019s Hardest Crossword")
                .setTile("forest")
                .setChit(6)
                .setRoads(ImmutableSet.of(Road.NORTHEAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("games", "UNLOCKED"))
                .setRot13Answer("JUBBCRR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-10")
                .setDisplayId("special_delivery")
                .setDisplayName("Special Delivery")
                .setTile("field")
                .setChit(3)
                .setRoads(ImmutableSet.of(Road.NORTHEAST,Road.WEST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-11", "SOLVED")
                        .addPuzzleStatusConstraint("games-2", "SOLVED")
                        .build())
                .setRot13Answer("QVEGL ZNEGVAV")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-11")
                .setDisplayId("do_you_want_a")
                .setDisplayName("Do You Want A")
                .setTile("hill")
                .setChit(4)
                .setRoads(ImmutableSet.of(Road.NORTHWEST,Road.EAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-12", "SOLVED")
                        .addPuzzleStatusConstraint("games-10", "SOLVED")
                        .build())
                .setRot13Answer("BA FVTUG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-12")
                .setDisplayId("shift")
                .setDisplayName("Shift")
                .setTile("field")
                .setChit(2)
                .setRoads(ImmutableSet.of(Road.NORTHWEST,Road.SOUTHEAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-13", "SOLVED")
                        .addPuzzleStatusConstraint("games-11", "SOLVED")
                        .build())
                .setRot13Answer("FYRRCRE NTRAG")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-13")
                .setDisplayId("flattery_will_get_you_nowhere")
                .setDisplayName("Flattery Will Get You Nowhere")
                .setTile("field")
                .setChit(10)
                .setRoads(ImmutableSet.of(Road.SOUTHEAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("games-9", "UNLOCKED"))
                .setRot13Answer("CBEGZNAGRNH")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-14")
                .setDisplayId("americas_best_friends")
                .setDisplayName("America\u2019s Best Friends")
                .setTile("hill")
                .setChit(9)
                .setRoads(ImmutableSet.of(Road.NORTHEAST,Road.SOUTHEAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-15", "SOLVED")
                        .addPuzzleStatusConstraint("games-4", "SOLVED")
                        .build())
                .setRot13Answer("WBANGUNA RQJNEQF")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-15")
                .setDisplayId("little_passages")
                .setDisplayName("Little Passages")
                .setTile("pasture")
                .setChit(4)
                .setRoads(ImmutableSet.of(Road.SOUTHWEST,Road.EAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-16", "SOLVED")
                        .addPuzzleStatusConstraint("games-14", "SOLVED")
                        .build())
                .setRot13Answer("UNPVRAQN")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-16")
                .setDisplayId("middle_of_the_road")
                .setDisplayName("Middle of the Road")
                .setTile("field")
                .setChit(6)
                .setRoads(ImmutableSet.of(Road.WEST,Road.EAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-17", "SOLVED")
                        .addPuzzleStatusConstraint("games-15", "SOLVED")
                        .build())
                .setRot13Answer("ZRQVNA")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-17")
                .setDisplayId("sports_radio")
                .setDisplayName("Sports Radio")
                .setTile("forest")
                .setChit(7)
                .setRoads(ImmutableSet.of(Road.WEST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("games-13", "UNLOCKED"))
                .setRot13Answer("HYGVZNGRSEVFORR")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        add.accept(PuzzleBuilder.builder()
                .setId("games-18")
                .setDisplayId("death_from_aslant")
                .setDisplayName("Death From Aslant")
                .setTile("mountain")
                .setChit(8)
                .setRoads(ImmutableSet.of(Road.WEST,Road.SOUTHEAST))
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.builder()
                        .addPuzzleStatusConstraint("games-7", "SOLVED")
                        .addPuzzleStatusConstraint("games-6", "SOLVED")
                        .build())
                .setRot13Answer("INYVQNGBE")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.GAMES));
        
        /**
         * Pokemon island
         */
        // "pokemon" represents the unlock of the island overall
        // TODO: How do I get unicode into these?  HTML entities don't seem to work
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon")
                .setDisplayName("Pok\u00E9mon Island"));

        //Base pokemon puzzles are 2 path points apart
        //Evolved pokemon unlock the a step on the path.  Base pokemon in the first half also earn half a step.
        //Evolved pokemon in the second half are empty puzzles and do not contribute to brainpower
        SolveRewardProperty pokemonFrontUnevolvedPuzzleReward = SolveRewardProperty.builder()
            .addScore(HuntDefinition.Score.POKEMON_PATH_PROGRESS, 1)
            .build();
        SolveRewardProperty pokemonEvolvedPuzzleReward = SolveRewardProperty.builder()
            .addScore(HuntDefinition.Score.POKEMON_PATH_PROGRESS, 2)
            .build();

        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-recovery")
                .setDisplayId("pokemon_recovery")
                .setDisplayName("Recover the Pok\u00E9mon Core Memory")
                .setInteraction()
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-supermeta", "SOLVED"))
                .setSolveReward(recoveryReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-supermeta")
                .setDisplayId("your_rival")
                .setDisplayName("Your Rival")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,20))
                .setRot13Answer("QVFTHVFRQ NF IBYGBEO")
                .setSymbol("rival")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));
                
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-meta-1")
                .setDisplayId("the_advertiser")
                .setDisplayName("The Advertiser")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon", "UNLOCKED"))
                .setFeeders(new ImmutableSet.Builder<String>()
                        .add("pokemon-evolved-6")
                        .add("pokemon-unevolved-3")
                        .add("pokemon-unevolved-2")
                        .add("pokemon-unevolved-9")
                        .add("pokemon-unevolved-5")
                        .build())
                .setRot13Answer("OYNPX ZNTVP")
                .setSymbol("advertiser-trainer")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-meta-2")
                .setDisplayId("the_scouts")
                .setDisplayName("The Scouts")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-meta-1", "UNLOCKED"))
                .setFeeders(new ImmutableSet.Builder<String>()
                        .add("pokemon-evolved-2")
                        .add("pokemon-evolved-4")
                        .add("pokemon-unevolved-1")
                        .add("pokemon-unevolved-7")
                        .add("pokemon-evolved-5")
                        .add("pokemon-unevolved-11")
                        .build())
                .setRot13Answer("OR ZRNA")
                .setSymbol("scouts-trainer")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-meta-3")
                .setDisplayId("the_taxonomist")
                .setDisplayName("The Taxonomist")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-meta-2", "UNLOCKED"))
                .setFeeders(new ImmutableSet.Builder<String>()
                        .add("pokemon-evolved-3")
                        .add("pokemon-unevolved-8")
                        .add("pokemon-unevolved-6")
                        .add("pokemon-unevolved-12")
                        .add("pokemon-unevolved-4")
                        .add("pokemon-unevolved-10")
                        .add("pokemon-evolved-1")
                        .build())
                .setRot13Answer("GNXR BHG")
                .setSymbol("taxonomist-trainer")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));

        // Render order is determined by ID and should match unlock order, score constraint
        // If order of base pokemon changes, remember to reorder the corresponding evolved pokemon
        // (Consider addressing this problem by adding an order property to use in rendering and
        // issuing IDs based on the relationships, but order is unlikely to change at this point)
        
        // Front half unevolved pokemon (1A Group)
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-1")
                .setDisplayId("shoal_patrol")
                .setDisplayName("Shoal Patrol")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-meta-3", "UNLOCKED"))
                .setRot13Answer("LNEQNEZ")
                .setSymbol("rattata")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonFrontUnevolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-2")
                .setDisplayId("i_wanna_be_the_very_best")
                .setDisplayName("I Wanna Be the Very Best")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-1", "UNLOCKED"))
                .setRot13Answer("TBYQRA FGNGR")
                .setSymbol("cranidos")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonFrontUnevolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-3")
                .setDisplayId("33_rpm")
                .setDisplayName("33 RPM")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-2", "UNLOCKED"))
                .setRot13Answer("JBBQFGBPX")
                .setSymbol("charmander")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonFrontUnevolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-4")
                .setDisplayId("twitch_plays_mystery_hunt")
                .setDisplayName("Twitch Plays Mystery Hunt")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,2))
                .setRot13Answer("EVTUGZBFG")
                .setSymbol("yamask")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonFrontUnevolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-5")
                .setDisplayId("you_know_whats_missing")
                .setDisplayName("You Know What\u2019s Missing")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,4))
                .setRot13Answer("CRNEY")
                .setSymbol("dratini")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonFrontUnevolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-6")
                .setDisplayId("its_not_easy")
                .setDisplayName("It\u2019s Not Easy")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,6))
                .setRot13Answer("FGHZOYR")
                .setSymbol("squirtle")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonFrontUnevolvedPuzzleReward));
        // Back half unevolved pokemon (2A Group)
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-7")
                .setDisplayId("harsh_financial_scrutiny")
                .setDisplayName("Harsh Financial Scrutiny")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,8))
                .setRot13Answer("PRVYVAT")
                .setSymbol("meowth")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-8")
                .setDisplayId("mamma_mia")
                .setDisplayName("Mamma Mia!")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,10))
                .setRot13Answer("NOFBYHGVBA")
                .setSymbol("rockruff")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-9")
                .setDisplayId("x_marks_the_spot")
                .setDisplayName("X Marks the Spot")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,12))
                .setRot13Answer("ERQ PUVAN")
                .setSymbol("ponyta")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-10")
                .setDisplayId("go")
                .setDisplayName("Go!")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,14))
                .setRot13Answer("CNFGBE")
                .setSymbol("duskull")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-11")
                .setDisplayId("vain_snowball")
                .setDisplayName("Vain Snowball")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,16))
                .setRot13Answer("WNQR")
                .setSymbol("bagon")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-unevolved-12")
                .setDisplayId("joyful_songs")
                .setDisplayName("Joyful Songs")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.scoreConstraint(HuntDefinition.Score.POKEMON_PATH_PROGRESS,18))
                .setRot13Answer("ERCGVYRF")
                .setSymbol("krabby")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON));
        
        // Front half evolved pokemon (1B Group)
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-1")
                .setDisplayId("submarine_patrol")
                .setDisplayName("Submarine Patrol")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-1", "SOLVED"))
                .setRot13Answer("ZNFG")
                .setSymbol("raticate")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-2")
                .setDisplayId("older_and_wiser")
                .setDisplayName("Older and Wiser")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-2", "SOLVED"))
                .setRot13Answer("OHFU")
                .setSymbol("rampardos")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-3")
                .setDisplayId("mix_tape")
                .setDisplayName("Mix Tape")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-3", "SOLVED"))
                .setRot13Answer("CHAX EBPX")
                .setSymbol("charmeleon")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-4")
                .setDisplayId("under_control")
                .setDisplayName("Under Control")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-4", "SOLVED"))
                .setRot13Answer("EVZ")
                .setSymbol("cofagrigus")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-5")
                .setDisplayId("mass_aid")
                .setDisplayName("Mass Aid")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-5", "SOLVED"))
                .setRot13Answer("YRAG")
                .setSymbol("dragonair")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-6")
                .setDisplayId("its_not_normal")
                .setDisplayName("It\u2019s Not Normal")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-6", "SOLVED"))
                .setRot13Answer("GUHZO UBYRF")
                .setSymbol("wartortle")
                .setBrainpowerGroup(HuntDefinition.BrainpowerGroup.POKEMON)
                .setSolveReward(pokemonEvolvedPuzzleReward));
        // Back half evolved pokemon (2B Group)
        // These last six don't have puzzle content. They need titles and a clearly deliberately blank page
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-7")
                .setDisplayId("persian")
                .setDisplayName("Persian")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-7", "SOLVED"))
                .setRot13Answer("JNYY")
                .setSymbol("persian")
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-8")
                .setDisplayId("lycanroc")
                .setDisplayName("Lycanroc")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-8", "SOLVED"))
                .setRot13Answer("ZHFR")
                .setSymbol("lycanroc")
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-9")
                .setDisplayId("rapidash")
                .setDisplayName("Rapidash")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-9", "SOLVED"))
                .setRot13Answer("FBHGU CNPVSVP")
                .setSymbol("rapidash")
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-10")
                .setDisplayId("dusclops")
                .setDisplayName("Dusclops")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-10", "SOLVED"))
                .setRot13Answer("CNE")
                .setSymbol("dusclops")
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-11")
                .setDisplayId("shelgon")
                .setDisplayName("Shelgon")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-11", "SOLVED"))
                .setRot13Answer("FBGBZNLBE")
                .setSymbol("shelgon")
                .setSolveReward(pokemonEvolvedPuzzleReward));
        add.accept(PuzzleBuilder.builder()
                .setId("pokemon-evolved-12")
                .setDisplayId("kingler")
                .setDisplayName("Kingler")
                .setUnlockedConstraint(HuntDefinition.VisibilityConstraint.puzzleStatusConstraint("pokemon-unevolved-12", "SOLVED"))
                .setRot13Answer("YVGUBFCURER")
                .setSymbol("kingler")
                .setSolveReward(pokemonEvolvedPuzzleReward));

        PUZZLES = puzzlesBuilder.build();
    }
}
